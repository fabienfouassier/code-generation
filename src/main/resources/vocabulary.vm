## common substitutions without date and user

#set ($package = $options.getPackage())
#set ($factoryClass = $options.getFactoryClassName())
#set ($factoryPackage = $options.getFactoryPackage())
#set ($factoryExtraImport = $options.getExtraFactoryImport())
#set ($ImplementationExtraImport = $options.getExtraImplementationImport())

## class substitutions


package ${factoryPackage};

${factoryExtraImport}

import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLDataFactory;
import org.semanticweb.owlapi.model.OWLDataProperty;
import org.semanticweb.owlapi.model.OWLObjectProperty;

/**
 * Vocabulary class to provide access to the Manchester OWL API representatives for 
 * various entities in the ontology used to generate this code.<p> 
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: ${javaClass}
 *
 * @version generated on ${date} by ${user}
 */

public class Vocabulary {

	private static final OWLDataFactory factory = OWLManager.createOWLOntologyManager().getOWLDataFactory();

	#foreach (${class} in ${root.getOwlClasses()})
	
	    /* ***************************************************
	     * Class ${class.IRI}
	     */
	     
	     
	    /**
	     * A constant to give access to the Manchester OWL api representation of the class ${OWLClass}.<p>
	     * ${javadoc}
	     */
	    public static final OWLClass ${VocabClass} = factory.getOWLClass(IRI.create("${classIri}"));
		
	#end

	#foreach (${owlDataProperty} in ${root.getOwlDataPropertiesForClass()})

	    /* ***************************************************
	     * Data Property ${propertyIri}
	     */
	     
	    /**
	     * A constant to give access to the Manchester OWL API representation of the data property ${OWLProperty}.<p>
	     * ${javadoc}
	     */
	    public static final OWLDataProperty ${VocabProperty} = factory.getOWLDataProperty(IRI.create("${propertyIri}"));
		
	#end
	
	#foreach (${owlObjectProperty} in ${root.getOwlObjectPropertiesForClass()})
	
	    /* ***************************************************
	     * Object Property ${propertyIri}
	     */
	     
	    /**
	     * A constant to give access to the Manchester OWL API representation of the object property ${OWLProperty}.<p>
	     * ${javadoc}
	     */
	    public static final OWLObjectProperty ${VocabProperty} = factory.getOWLObjectProperty(IRI.create("${propertyIri}"));
		
	#end
}
	